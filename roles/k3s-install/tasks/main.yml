---
# tasks file for k3s-install
- name: Check for k3s token
  fail:
    msg: Must provide a token for k3s
  when: k3s_token is undefined

- name: Enable cgroup via boot commandline if not already enabled for Ubuntu 18.04
  lineinfile:
    path: /boot/firmware/nobtcmd.txt
    backrefs: yes
    regexp: '^((?!.*\bcgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\b).*)$'
    line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
  register: cgroup_result
  when: ansible_distribution_major_version == "18"

- name: Enable cgroup via boot commandline if not already enabled for Ubuntu 20.04
  lineinfile:
    path: /boot/firmware/cmdline.txt
    backrefs: yes
    regexp: '^((?!.*\bcgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\b).*)$'
    line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
  register: cgroup_result
  when: ansible_distribution_major_version == "20"

- name: Reboot host to enable cgroups
  reboot:
  when: cgroup_result.changed

- name: Get k3s install script
  get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s.sh
    mode: '755'

- name: Install k3s on first master
  command: 
    argv:
    - /tmp/k3s.sh 
    - server
    - --cluster-init
  environment:
    K3S_TOKEN: '{{ k3s_token }}'
    INSTALL_K3S_CHANNEL: '{{ k3s_channel }}'
  when: ansible_host in groups['masters'][0]
  args:
    creates: /var/lib/rancher/k3s/server/node-token
  register: master_deploy

- name: Pause for 5 minutes to allow initial master to fully deploy
  pause:
    minutes: 5
  when: master_deploy.changed

- name: Install k3s on masters
  command: 
    argv:
    - /tmp/k3s.sh 
    - server 
    - --server
    - https://{{ groups['masters'][0] }}:6443
  environment:
    K3S_TOKEN: '{{ k3s_token }}'
    INSTALL_K3S_CHANNEL: '{{ k3s_channel }}'
  when: ansible_host in groups['masters'][1:]
  args:
    creates: /var/lib/rancher/k3s/server/node-token

- name: Install k3s on workers
  command:
    argv:
    - /tmp/k3s.sh 
    - agent 
    - --server
    - https://{{ groups['masters'][0] }}:6443
  environment:
    K3S_TOKEN: '{{ k3s_token }}'
    INSTALL_K3S_CHANNEL: '{{ k3s_channel }}'
  when: ansible_host in groups['workers']
  args:
    creates: /var/lib/rancher/k3s/agent/client-ca.cr